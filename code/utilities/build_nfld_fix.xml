<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." name="build_nfld_fix" default="all">
  
  <description> 
    1. Convert .png to .jpg 
    2. Rename hocr.html and new .jpg according to debate day
        date and legislature 
    3. Add a link in the hocr.html to the .jpg 
    4. Copy hocr.html to
        ../final/hocr and .jpg to ../final/images 
  </description>
  
<!-- Defining task to load Ant-Contrib library -->
  
  <taskdef resource="net/sf/antcontrib/antcontrib.properties"/>



<!-- Identifying a "hocr_location" that will be the final/hocr folder  -->
  
  <property name="hocr_location"
    value="${basedir}/../../data/Nfld/Provincial/The_Newfoundlander/final/hocr"/>
  


<!-- Identifying a "image_location" that will be the final/images folder  -->
  
  <property name="image_location"
    value="${basedir}/../../data/Nfld/Provincial/The_Newfoundlander/final/images"/>
  


<!-- Identifying a file-set that is all the .hocr.html files in "The_Newfoundlander" -->
  
  <fileset id="hocr_files" dir="${basedir}/../../data/Nfld/Provincial/The_Newfoundlander">
    <include name="**/*.hocr.html"/>
  </fileset>
  



<!-- Deleting all previous versions of final folders and contents then re-creating the directories -->
  
  <target name="cleanup">
    <description>This target will remove products from previous runs of this script.</description>
    <echo>Cleaning up previous runs.</echo>
    <delete dir="${hocr_location}"/>
    <delete dir="${image_location}"/>
    <mkdir dir="${hocr_location}"/>
    <mkdir dir="${image_location}"/>
  </target>
  


  <!-- For every hocr.html file in "The_Newfoundlander" we pass it through the "convert_file" target. For every file found in "hocr_files" call it an "inFile" and run it through "convert_file" -->
  
  <target name="convert_files">
    <description>Pass each file from the file-set into the convert_file target.</description>
    <echo>Pass each file from the file-set into the convert_file target.</echo>
    <foreach target="convert_file" param="inFile">
      <path>
        <fileset refid="hocr_files"/>
      </path>
    </foreach>
  
  </target>
  


<!-- Converting files task -->

  <target name="convert_file">
    <description>Convert a single file and its associated image and output results to output folders.</description>
    <echo>Convert a single file and its associated image and output results to output folders.</echo>
    <echo message="converting ${inFile}"/>



<!-- Determining the directory name based on the path to each hocr file -->  
    
    <dirname property="filePath" file="${inFile}"/>



<!-- Determining the base name of directory as identified in "filePath" above -->   
    
    <basename property="dirName" file="${filePath}"/>



<!-- Using regex to pull out the page number from the file name. Regex looks for any characters before capturing any digits that precede ".hocr.html" and the task selects the captured number. --> 
    
    <propertyregex property="pageNumber" input="${inFile}" regexp=".+(\d+)\.hocr\.html" select="\1"></propertyregex>



<!-- Creating a proper file name by setting a property that goes into "The_Newfoundlander" prepends "lgNDLA_" to the directory name (i.e. debate day date) and adds the page number before .hocr.html extension.  -->  
    
    <property name="hocrOutFile" value="${hocr_location}/lgNDLA_${dirName}_Page_${pageNumber}.hocr.html"/>
    <echo message="${hocrOutFile}"/>



<!-- Identify .png file in the directory -->    
    
    <property name="inImage" value="${filePath}/page-${pageNumber}.png"/>



<!-- Create a proper filename for .jpg to be created by same formula as .hocr -->    
    
    <property name="jpgOutFile" value="${image_location}/lgNDLA_${dirName}_Page_${pageNumber}.jpg"/>



<!-- Invoking imagemagick convert command to change .png to .jpg -->
    
    <exec executable="convert">
      <arg value="${inImage}"/>
      <arg value="${jpgOutFile}"/>
    </exec>



<!-- Invoking saxon to call up xslt created to insert file path with correct image name in the hocr document. See "add_image_link.xsl" in xslt folder. -->    
    
    <java classname="net.sf.saxon.Transform" classpath="saxon9he.jar">
      <arg value="-s:${inFile}"/>
      <arg value="-xsl:${basedir}/../xslt/add_image_link.xsl"/> 
      <arg value="-o:${hocrOutFile}"/>
      <arg value="imageFilePath=${jpgOutFile}"/>
      <arg value="pageNumber=${pageNumber}"/>
      <arg value="--suppressXsltNamespaceCheck:on"/>
    </java>
  </target>



<!-- Calling two targets to execute all ant tasks -->  
  
  <target name="all">
    <antcall target="cleanup"/>
    <antcall target="convert_files"/>
  </target>
  
</project>
